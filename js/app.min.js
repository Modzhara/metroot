(() => { "use strict"; let e = {}, t = { Android: function () { return navigator.userAgent.match(/Android/i) }, BlackBerry: function () { return navigator.userAgent.match(/BlackBerry/i) }, iOS: function () { return navigator.userAgent.match(/iPhone|iPad|iPod/i) }, Opera: function () { return navigator.userAgent.match(/Opera Mini/i) }, Windows: function () { return navigator.userAgent.match(/IEMobile/i) }, any: function () { return t.Android() || t.BlackBerry() || t.iOS() || t.Opera() || t.Windows() } }, r = !0, a = (e = 500) => { if (r) { let t = document.querySelectorAll("[data-lp]"); setTimeout(() => { t.forEach(e => { e.style.paddingRight = "" }), document.documentElement.classList.remove("lock") }, e), r = !1, setTimeout(function () { r = !0 }, e) } }, s = (e = 500) => { r && (document.querySelectorAll("[data-lp]").forEach(e => { e.style.paddingRight = lockPaddingValue }), document.documentElement.classList.add("lock"), r = !1, setTimeout(function () { r = !0 }, e)) }; function o(e) { setTimeout(() => { window.FLS && console.log(e) }, 0) } function l(e) { return e.filter(function (e, t, r) { return r.indexOf(e) === t }) } e.mousePrlx = new class { constructor(e, t = null) { if (this.config = Object.assign({ init: !0, logging: !0 }, e), this.config.init) { let r = document.querySelectorAll("[data-prlx-mouse]"); r.length ? (this.paralaxMouseInit(r), this.setLogging(`Прокинувся, стежу за об'єктами: (${r.length})`)) : this.setLogging("Немає жодного обєкта. Сплю...") } } paralaxMouseInit(e) { e.forEach(e => { let t = e.closest("[data-prlx-mouse-wrapper]"), r = e.dataset.prlxCx ? +e.dataset.prlxCx : 100, a = e.dataset.prlxCy ? +e.dataset.prlxCy : 100, s = e.hasAttribute("data-prlx-dxr") ? -1 : 1, o = e.hasAttribute("data-prlx-dyr") ? -1 : 1, l = e.dataset.prlxA ? +e.dataset.prlxA : 50, n = 0, i = 0, c = 0, d = 0; function h(t = window) { t.addEventListener("mousemove", function (t) { let r = e.getBoundingClientRect().top + window.scrollY; if (r >= window.scrollY || r + e.offsetHeight >= window.scrollY) { let a = window.innerWidth, s = window.innerHeight, o = t.clientX - a / 2, l = t.clientY - s / 2; c = o / a * 100, d = l / s * 100 } }) } !function t() { n += (c - n) * l / 1e3, i += (d - i) * l / 1e3, e.style.cssText = `transform: translate3D(${s * n / (r / 10)}%,${o * i / (a / 10)}%,0) rotate(0.02deg);`, requestAnimationFrame(t) }(), t ? h(t) : h() }) } setLogging(e) { this.config.logging && o(`[PRLX Mouse]: ${e}`) } }({}); let n = (e, t = !1, r = 500, s = 0) => { let l = document.querySelector(e); if (l) { let n = "", i = 0; if (t) { n = "header.header"; let c = document.querySelector(n); c.classList.contains("_header-scroll") ? i = c.offsetHeight : (c.style.cssText = "transition-duration: 0s;", c.classList.add("_header-scroll"), i = c.offsetHeight, c.classList.remove("_header-scroll"), setTimeout(() => { c.style.cssText = "" }, 0)) } let d = { speedAsDuration: !0, speed: r, header: n, offset: s, easing: "easeOutQuad" }; if (document.documentElement.classList.contains("menu-open") && (a(), document.documentElement.classList.remove("menu-open")), "undefined" != typeof SmoothScroll) new SmoothScroll().animateScroll(l, "", d); else { let h = l.getBoundingClientRect().top + scrollY; h = i ? h - i : h, h = s ? h - s : h, window.scrollTo({ top: h, behavior: "smooth" }) } o(`[gotoBlock]: Юхуу...їдемо до ${e}`) } else o(`[gotoBlock]: Йой... Такого блоку немає на сторінці: ${e}`) }, i = { getErrors(e) { let t = 0, r = e.querySelectorAll("*[data-required]"); return r.length && r.forEach(e => { null === e.offsetParent && "SELECT" !== e.tagName || e.disabled || (t += this.validateInput(e)) }), t }, validateInput(e) { let t = 0; return "email" === e.dataset.required ? (e.value = e.value.replace(" ", ""), this.emailTest(e) ? (this.addError(e), t++) : this.removeError(e)) : ("checkbox" !== e.type || e.checked) && e.value.trim() ? this.removeError(e) : (this.addError(e), t++), t }, addError(e) { e.classList.add("_form-error"), e.parentElement.classList.add("_form-error"); let t = e.parentElement.querySelector(".form__error"); t && e.parentElement.removeChild(t), e.dataset.error && e.parentElement.insertAdjacentHTML("beforeend", `<div class="form__error">${e.dataset.error}</div>`) }, removeError(e) { e.classList.remove("_form-error"), e.parentElement.classList.remove("_form-error"), e.parentElement.querySelector(".form__error") && e.parentElement.removeChild(e.parentElement.querySelector(".form__error")) }, formClean(t) { t.reset(), setTimeout(() => { let r = t.querySelectorAll("input,textarea"); for (let a = 0; a < r.length; a++) { let s = r[a]; s.parentElement.classList.remove("_form-focus"), s.classList.remove("_form-focus"), i.removeError(s) } let o = t.querySelectorAll(".checkbox__input"); if (o.length > 0) for (let l = 0; l < o.length; l++)o[l].checked = !1; if (e.select) { let n = t.querySelectorAll("div.select"); if (n.length) for (let c = 0; c < n.length; c++) { let d = n[c].querySelector("select"); e.select.selectBuild(d) } } }, 0) }, emailTest: e => !/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,8})+$/.test(e.value) }; e.watcher = new class { constructor(e) { this.config = Object.assign({ logging: !0 }, e), this.observer, document.documentElement.classList.contains("watcher") || this.scrollWatcherRun() } scrollWatcherUpdate() { this.scrollWatcherRun() } scrollWatcherRun() { document.documentElement.classList.add("watcher"), this.scrollWatcherConstructor(document.querySelectorAll("[data-watch]")) } scrollWatcherConstructor(e) { e.length ? (this.scrollWatcherLogging(`Прокинувся, стежу за об'єктами (${e.length})...`), l(Array.from(e).map(function (e) { if ("navigator" === e.dataset.watch && !e.dataset.watchThreshold) { let t; e.clientHeight > 2 ? (t = window.innerHeight / 2 / (e.clientHeight - 1)) > 1 && (t = 1) : t = 1, e.setAttribute("data-watch-threshold", t.toFixed(2)) } return `${e.dataset.watchRoot ? e.dataset.watchRoot : null}|${e.dataset.watchMargin ? e.dataset.watchMargin : "0px"}|${e.dataset.watchThreshold ? e.dataset.watchThreshold : 0}` })).forEach(t => { let r = t.split("|"), a = { root: r[0], margin: r[1], threshold: r[2] }, s = Array.from(e).filter(function (e) { let t = e.dataset.watchRoot ? e.dataset.watchRoot : null, r = e.dataset.watchMargin ? e.dataset.watchMargin : "0px", s = e.dataset.watchThreshold ? e.dataset.watchThreshold : 0; if (String(t) === a.root && String(r) === a.margin && String(s) === a.threshold) return e }), o = this.getScrollWatcherConfig(a); this.scrollWatcherInit(s, o) })) : this.scrollWatcherLogging("Сплю, немає об'єктів для стеження. ZzzZZzz") } getScrollWatcherConfig(e) { let t = {}; if (document.querySelector(e.root) ? t.root = document.querySelector(e.root) : "null" !== e.root && this.scrollWatcherLogging(`Эмм... батьківського об'єкта ${e.root} немає на сторінці`), t.rootMargin = e.margin, !(0 > e.margin.indexOf("px") && 0 > e.margin.indexOf("%"))) { if ("prx" === e.threshold) { e.threshold = []; for (let r = 0; r <= 1; r += .005)e.threshold.push(r) } else e.threshold = e.threshold.split(","); return t.threshold = e.threshold, t } this.scrollWatcherLogging("йой, налаштування data-watch-margin потрібно задавати в PX або %") } scrollWatcherCreate(e) { console.log(e), this.observer = new IntersectionObserver((e, t) => { e.forEach(e => { this.scrollWatcherCallback(e, t) }) }, e) } scrollWatcherInit(e, t) { this.scrollWatcherCreate(t), e.forEach(e => this.observer.observe(e)) } scrollWatcherIntersecting(e, t) { e.isIntersecting ? (t.classList.contains("_watcher-view") || t.classList.add("_watcher-view"), this.scrollWatcherLogging(`Я бачу ${t.classList}, додав клас _watcher-view`)) : (t.classList.contains("_watcher-view") && t.classList.remove("_watcher-view"), this.scrollWatcherLogging(`Я не бачу ${t.classList}, прибрав клас _watcher-view`)) } scrollWatcherOff(e, t) { t.unobserve(e), this.scrollWatcherLogging(`Я перестав стежити за ${e.classList}`) } scrollWatcherLogging(e) { this.config.logging && o(`[Спостерігач]: ${e}`) } scrollWatcherCallback(e, t) { let r = e.target; this.scrollWatcherIntersecting(e, r), r.hasAttribute("data-watch-once") && e.isIntersecting && this.scrollWatcherOff(r, t), document.dispatchEvent(new CustomEvent("watcherCallback", { detail: { entry: e } })) } }({}); let c = !1; function d(e) { return new Promise(t => { let r = performance.now(); requestAnimationFrame(function a(s) { s - r >= e ? t() : requestAnimationFrame(a) }) }) } async function h(e, t = 150) { let r = document.getElementById(e); if (!r) return; let a = r.innerText; for (let s of (r.innerHTML = "", a)) r.innerHTML += s, await d(t); await d(400), r.classList.add("animated") } async function u(e, t = 800) { let r = document.getElementById(e); if (!r) return; let a = r.innerText || r.textContent; a = a.replace(/ /g, "&nbsp;"); let s = a.split("&nbsp;"); for (let o of (r.innerHTML = "", s)) { if ("" === o.trim()) continue; let l = document.createElement("span"); l.innerHTML = o + "&nbsp;", l.style.opacity = 0, l.style.transition = "opacity 0.5s ease", l.style.display = "inline-block", r.appendChild(l), await d(Math.max(t, 16)), l.style.opacity = 1 } await d(400), r.classList.add("show-word") } setTimeout(() => { if (c) { let e = new Event("windowScroll"); window.addEventListener("scroll", function (t) { document.dispatchEvent(e) }) } }, 0), document.addEventListener("watcherCallback", function (e) { let t = e.detail.entry.target; if (t.classList.contains("_watcher-view") && t.classList.contains("form-page__title")) { let r = t.offsetHeight; t.style.minHeight = `${r}px`, setTimeout(() => { h("contact", 80) }, 300) } }), document.addEventListener("DOMContentLoaded", async () => { let e = document.getElementById("title-2"), t = document.getElementById("title-3"); e && (e.style.opacity = "0"), t && (t.style.opacity = "0"), await h("title-1", 80), await d(250), e && (e.style.opacity = "1", await u("title-2", 150)), await d(50), await async function (e, t = 500, r = 500) { let a = document.querySelector(e); a && (a.style.opacity = 0, a.style.transform = "scale(0) rotate(0deg)", a.offsetHeight, a.style.transition = `opacity ${r}ms ease, transform ${r}ms ease`, await d(t), a.style.opacity = 1, a.style.transform = "scale(1) rotate(360deg)") }(".middle-hero__image", 200, 700), await d(0), t && (t.style.opacity = "1", await u("title-3", 250)); let r = document.querySelectorAll(".hero-page__p"), a = document.querySelector(".hero-page__button"); r.forEach(e => { e.classList.add("_watcher-view"), a.classList.add("_watcher-view") }) }), document.addEventListener("wpcf7mailsent", function (e) { console.log("yes") }, !1), document.addEventListener("wpcf7invalid", function (e) { console.log("no") }, !1), document.addEventListener("formSent", function (e) { e.preventDefault(), e.detail.form; var t = document.getElementById("name").value, r = document.getElementById("email").value, a = document.getElementById("tel").value; document.querySelector('[name="name"]').value = t, document.querySelector('[name="email"]').value = r, document.querySelector('[name="tel"]').value = a, document.querySelector(".wpcf7-form").submit() }), document.addEventListener("DOMContentLoaded", function () { document.querySelectorAll('a[href^="#"]').forEach(e => { e.onclick = function (e) { e.preventDefault(); let t = document.querySelector(this.hash).getBoundingClientRect().top + window.scrollY - 50; window.scrollTo({ top: t, behavior: "smooth" }), document.documentElement.classList.remove("lock", "menu-open") } }) }), window.FLS = !0, document.querySelector(".icon-menu") && document.addEventListener("click", function (e) { r && e.target.closest(".icon-menu") && (((e = 500) => { document.documentElement.classList.contains("lock") ? a(e) : s(e) })(), document.documentElement.classList.toggle("menu-open")) }), function (e) { let r = document.querySelector("[data-custom-cursor]") ? document.querySelector("[data-custom-cursor]") : document.documentElement; if (r && !t.any()) { let a = document.createElement("div"); a.classList.add("fls-cursor"), a.style.opacity = 0, a.insertAdjacentHTML("beforeend", '<span class="fls-cursor__pointer"></span>'), e && a.insertAdjacentHTML("beforeend", '<span class="fls-cursor__shadow"></span>'), r.append(a); let s = document.querySelector(".fls-cursor__pointer"), o = { width: s.offsetWidth, height: s.offsetHeight }, l, n; function i(e) { "mouseout" === e.type ? a.style.opacity = 0 : "mousemove" === e.type ? (a.style.removeProperty("opacity"), e.target.closest("button") || e.target.closest("a") || e.target.closest("input") || "none" !== window.getComputedStyle(e.target).cursor && "default" !== window.getComputedStyle(e.target).cursor ? a.classList.add("_hover") : a.classList.remove("_hover")) : "mousedown" === e.type ? a.classList.add("_active") : "mouseup" === e.type && a.classList.remove("_active"), s && (s.style.transform = `translate3d(${e.clientX - o.width / 2}px, ${e.clientY - o.height / 2}px, 0)`), l && (l.style.transform = `translate3d(${e.clientX - n.width / 2}px, ${e.clientY - n.height / 2}px, 0)`) } e && (n = { width: (l = document.querySelector(".fls-cursor__shadow")).offsetWidth, height: l.offsetHeight }), window.addEventListener("mouseup", i), window.addEventListener("mousedown", i), window.addEventListener("mousemove", i), window.addEventListener("mouseout", i) } }(!0), function (e = { viewPass: !1, autoHeight: !1 }) { if (document.body.addEventListener("focusin", function (e) { let t = e.target; "INPUT" !== t.tagName && "TEXTAREA" !== t.tagName || (t.hasAttribute("data-no-focus-classes") || (t.classList.add("_form-focus"), t.parentElement.classList.add("_form-focus")), i.removeError(t), t.hasAttribute("data-validate") && i.removeError(t)) }), document.body.addEventListener("focusout", function (e) { let t = e.target; "INPUT" !== t.tagName && "TEXTAREA" !== t.tagName || (t.hasAttribute("data-no-focus-classes") || (t.classList.remove("_form-focus"), t.parentElement.classList.remove("_form-focus")), t.hasAttribute("data-validate") && i.validateInput(t)) }), e.viewPass && document.addEventListener("click", function (e) { let t = e.target; if (t.closest('[class*="__viewpass"]')) { let r = t.classList.contains("_viewpass-active") ? "password" : "text"; t.parentElement.querySelector("input").setAttribute("type", r), t.classList.toggle("_viewpass-active") } }), e.autoHeight) { let t = document.querySelectorAll("textarea[data-autoheight]"); if (t.length) { function r(e, t) { e.style.height = `${t}px` } t.forEach(e => { let t = e.hasAttribute("data-autoheight-min") ? Number(e.dataset.autoheightMin) : Number(e.offsetHeight), a = e.hasAttribute("data-autoheight-max") ? Number(e.dataset.autoheightMax) : 1 / 0; r(e, Math.min(t, a)), e.addEventListener("input", () => { e.scrollHeight > t && (e.style.height = "auto", r(e, Math.min(Math.max(e.scrollHeight, t), a))) }) }) } } }({ viewPass: !1, autoHeight: !1 }), function () { let t = document.forms; if (t.length) for (let r of t) r.addEventListener("submit", function (e) { a(e.target, e) }), r.addEventListener("reset", function (e) { let t = e.target; i.formClean(t) }); async function a(e, t) { if (0 === (e.hasAttribute("data-no-validate") ? 0 : i.getErrors(e))) { if (e.hasAttribute("data-ajax")) { t.preventDefault(); let r = e.getAttribute("action") ? e.getAttribute("action").trim() : "#", a = e.getAttribute("method") ? e.getAttribute("method").trim() : "GET", o = new FormData(e); e.classList.add("_sending"); let l = await fetch(r, { method: a, body: o }); if (l.ok) { let c = await l.json(); e.classList.remove("_sending"), s(e, c) } else alert("Помилка"), e.classList.remove("_sending") } else e.hasAttribute("data-dev") && (t.preventDefault(), s(e)) } else if (t.preventDefault(), e.querySelector("._form-error") && e.hasAttribute("data-goto-error")) { let d = e.dataset.gotoError ? e.dataset.gotoError : "._form-error"; n(d, !0, 1e3) } } function s(t, r = "") { document.dispatchEvent(new CustomEvent("formSent", { detail: { form: t } })), setTimeout(() => { if (e.popup) { let r = t.dataset.popupMessage; r && e.popup.open(r) } }, 0), i.formClean(t), o(`[Форми]: Форму відправлено!`) } }() })();
